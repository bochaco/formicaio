[package]
name = "formicaio"
version = "0.0.18"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
alloy = { version = "0.6.2", default-features = false, features = ["provider-http","reqwest"] }
alloy-sol-types = { version = "0.8.11", default-features = false, features = ["json"], optional = true }
alloy-contract = { version = "0.6.2", default-features = false, optional = true }
apexcharts-rs = { version = "0.1.7", features = ["leptos"] }
async-stream = { version = "0.3.5", optional = true }
axum = { version = "0.7", optional = true, features = ["macros"] }
bs58 = { version = "0.5.1", optional = true }
bytes = "1.7"
chrono = "0.4.38"
console_error_panic_hook = "0.1"
eyre = { version = "0.6.12", optional = true }
futures-util = "0.3.30"
gloo-timers = { version = "0.3.0", default-features = false, features = ["futures"] }
gloo-utils = { version = "0.2.0", default-features = false, features = ["serde"] }
hex = "0.4.3"
http = "1"
http-body-util = { version = "0.1.2", optional = true }
hyper = { version = "1.4.1", features = ["client","http1"], optional = true }
hyper-util = { version = "0.1.9", optional = true }
leptos = { version = "0.6" }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6" }
leptos_router = { version = "0.6" }
rand = "0.8.5"
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls"], optional = true }
semver = { version = "1.0.20", optional = true }
serde = "1.0.207"
serde_json = "1.0"
server_fn = { version = "0.6", optional = true }
sn_protocol = { version = "0.17.6", features = ["rpc"], optional = true }
sqlx = { version = "0.8.0", default-features = false, features = ["derive","migrate","runtime-tokio","tls-rustls","sqlite"], optional = true }
thiserror = "1"
tonic = { version = "0.6.2", default-features = false, features = ["tls"], optional = true }
tokio = { version = "1", default-features = false, features = ["rt-multi-thread"], optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", default-features = false, features = ["fs"], optional = true }
url = { version = "2", optional = true }
wasm-bindgen = "=0.2.95"
wasm-bindgen-futures = "0.4"

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:alloy-sol-types",
    "dep:alloy-contract",
    "dep:async-stream",
    "dep:axum",
    "dep:bs58",
    "dep:eyre",
    "dep:http-body-util",
    "dep:hyper",
    "dep:hyper-util",
    "dep:leptos_axum",
    "dep:reqwest",
    "dep:semver",
    "dep:server_fn",
    "dep:sn_protocol",
    "dep:sqlx",
    "dep:tonic",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:url",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "formicaio"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
#style-file = "style/tailwind.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
